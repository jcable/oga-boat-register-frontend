{"version":3,"sources":["components/main.js","components/searchandfilterboats.js","components/picker.js","components/textlist.js","components/boatcard.js","components/boatcards.js","components/browseboats.js","components/tabpanel.js","components/conditionaltext.js","components/sailtable.js","components/smugmuggallery.js","components/boat.js","App.js","serviceWorker.js","index.js"],"names":["Main","Picker","options","id","label","onChange","defaultValue","useState","name","value","setValue","Autocomplete","inputValue","getOptionSelected","t","v","getOptionLabel","option","onInputChange","_","renderInput","params","TextField","variant","sortFields","pageSize","i","push","useStyles","makeStyles","theme","root","margin","spacing","width","SearchAndFilterBoats","onFilterChange","onPageSizeChange","onSortFieldChange","onSortDirectionChange","after","until","Date","getFullYear","classes","names","setNames","ogaNo","setOgaNo","firstYear","lastYear","year","setYear","update","f","console","log","useEffect","useQuery","gql","loading","error","data","boat","designer","builder","rig_type","sail_type","design_class","generic_type","construction_material","currentBoatNames","map","b","previousBoatNames","previous_names","flat","setOfBoats","Set","allBoatNames","sort","a","toLowerCase","localeCompare","shift","boatNames","n","__typename","sw","event","val","target","pl","sy","length","y","className","Grid","container","direction","justify","alignItems","min","max","FormControlLabel","control","Switch","TextList","fields","r","Object","keys","forEach","key","access","text","Typography","wanted","place_built","home_port","rigType","designerByDesigner","undefined","builderByBuilder","join","BoatCard","oga_no","skip","image_key","image","thumb","Card","card","cardSmall","CardActionArea","CardMedia","cardMedia","title","CardContent","cardContent","gutterBottom","component","dangerouslySetInnerHTML","__html","short_description","desc","trim","startsWith","normaliseDescription","CardActions","Button","size","href","color","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","height","display","flexDirection","cardMediaSmall","flexGrow","footer","BoatCards","boatsPerPage","sortField","sortDirection","where","_and","_gte","_lte","_is_null","onLoad","page","setPage","variables","limit","offset","totalCount","boat_aggregate","aggregate","pages","Math","ceil","handlePageChange","Fragment","CssBaseline","Container","maxWidth","Pagination","count","shape","item","xs","sm","md","BrowseBoats","setBoatsPerPage","setSortField","setSortDirection","setWhere","parseInt","checked","filters","all","first","last","_eq","_or","_ilike","_contains","buildersByBuilder","rigTypeByRigType","genericTypeByGenericType","designClassByDesignClass","constructionMaterialByConstructionMaterial","for_sale_state","Divider","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","ConditionalText","Array","isArray","fontWeight","SailTable","rows","TableContainer","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","luff","head","foot","SmugMugGallery","albumKey","url","frameborder","scrolling","iframe","m2f","toFixed","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","appBarSpacer","mixins","toolbar","content","overflow","fixedHeight","button","border","Boat","useTheme","fixedHeightPaper","clsx","boatQuery","document","panes","home_country","year_is_approximate","sail_number","ssr","nhsr","fishing_number","callsign","nsbr","uk_part1","hull_form","replace","constructionMethodByConstructionMethod","construction_details","construction_notes","length_on_deck","handicap_data","length_overall","length_on_waterline","beam","draft","full_description","unshift","sails","entries","main","thcf","calculated_thcf","fore_triangle_base","fore_triangle_height","fs","for_sales","price","Intl","NumberFormat","currency","style","format","asking_price","sales_text","noValidate","autoComplete","fullWidth","type","endIcon","Icon","lg","mainsail_type","AppBar","Tabs","newValue","indicatorColor","textColor","centered","pane","Tab","axis","onChangeIndex","client","ApolloClient","link","createHttpLink","uri","cache","InMemoryCache","routes","App","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8fa4123f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Main() {\n    return (<div>Main</div>);\n}\n\nexport default Main","import React, { useState, useEffect } from 'react'\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FormControlLabel, Grid, Switch, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Picker from './picker'\n\nconst sortFields = [\n    { name: \"Boat Name\" },\n    { name: \"OGA No.\" },\n    { name: \"Year Built\" },\n    { name: \"Last Updated\" },\n    { name: \"Price\" },\n];\nconst pageSize = [];\nfor(let i=1; i<=8; i++) {\n    pageSize.push({name: `${6*i}` });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nfunction SearchAndFilterBoats({\n    onFilterChange,\n    onPageSizeChange,\n    onSortFieldChange,\n    onSortDirectionChange,\n    after=1800,\n    until=(new Date()).getFullYear() + 1,\n}) {\n    const classes = useStyles();\n\n    const [names, setNames] = useState({});\n    const [ogaNo, setOgaNo] = useState();\n    const [year, setYear] = useState({ firstYear: after, lastYear: until });\n    \n    function update() {\n        const f = { ...names, ogaNo, year };\n        console.log('updateFilters', f);\n        if(onFilterChange) onFilterChange(f);\n    }\n\n    useEffect(update, [names, ogaNo, year]);\n\n    const { loading, error, data } = useQuery(gql(`{\n        boat{name previous_names}\n        designer(order_by: {name: asc}){name}\n        builder(order_by: {name: asc}){name}\n        rig_type(order_by: {name: asc}){name}\n        sail_type(order_by: {name: asc}){name}\n        design_class(order_by: {name: asc}){name}\n        generic_type(order_by: {name: asc}){name}\n        construction_material(order_by: {name: asc}){name}\n    }`));\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(SearchAndFilterBoats)</p>;\n\n    const { boat, designer, builder, rig_type, sail_type, design_class, generic_type, construction_material } = data;\n\n    const currentBoatNames = boat.map((b) => (b.name));\n    const previousBoatNames = boat.map((b) => b.previous_names).flat();\n    const setOfBoats = new Set([...currentBoatNames, ...previousBoatNames]);\n    const allBoatNames = [...setOfBoats];\n    allBoatNames.sort((a, b) => (a.toLowerCase().localeCompare(b.toLowerCase())));\n    if (allBoatNames[0] === '') allBoatNames.shift();\n    const boatNames = allBoatNames.map((n) => ({ name: n, __typename: 'boat' }));\n\n    function sw(event, val) {\n        if (event.target.id) {\n            const n = names;\n            n[event.target.id] = val;\n            setNames(n);\n            update(); \n        }\n    }\n\n    function pl(id, value) {\n        const n = names;\n        if (value) {\n            n[id] = value;\n        } else {\n            delete n[id];\n        }\n        setNames(n);\n        update(); \n}\n\n    function o(event) {\n        setOgaNo(event.target.value);\n        update(); \n    }\n\n    function sy(event) {\n        console.log('sy', event);\n        const { id, value } = event.target;\n        if (value.length === 4) {\n            const y = year;\n            y[id] = value;\n            setYear(y);    \n            update(); \n        }\n    }\n\n    return (\n    <form className={classes.root}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\n            <Picker onChange={pl} id=\"boat-name\" options={boatNames} label=\"Boat Name\" />\n            <TextField onChange={o} id=\"oga-no\" label=\"OGA Boat No.\" variant=\"outlined\" />\n            <Picker onChange={pl} id=\"designer-name\" options={designer} label=\"Designer\" />\n            <Picker onChange={pl} id=\"builder-name\" options={builder} label=\"Builder\" />\n            <TextField onChange={sy} id=\"firstYear\" label=\"Built After\" min={after} max=\"\" defaultValue={after} variant=\"outlined\" />\n            <TextField onChange={sy} id=\"lastYear\" label=\"Built Before\" min={after} max={until} defaultValue={until} variant=\"outlined\" />\n            <Picker onChange={pl} id=\"rig-type\" options={rig_type} label=\"Rig Type\" />\n            <Picker onChange={pl} id=\"mainsail-type\" options={sail_type} label=\"Mainsail Type\" />\n            <Picker onChange={pl} id=\"generic-type\" options={generic_type} label=\"Generic Type\" />\n            <Picker onChange={pl} id=\"design-class\" options={design_class} label=\"Design Class\" />\n            <Picker onChange={pl} id=\"construction-material\" options={construction_material} label=\"Construction Material\" />\n            <FormControlLabel control={<Switch id=\"nopics\" onChange={sw} />} label=\"include boats without pictures\" />\n            <FormControlLabel control={<Switch id=\"sale\" onChange={sw} />} label=\"only boats for sale\" />\n            <Picker defaultValue=\"name\" id=\"sort-field\" onChange={onSortFieldChange} options={sortFields} label=\"Sort By\" />\n            <FormControlLabel id=\"sort-direction\" onChange={onSortDirectionChange} control={<Switch />} label=\"reversed\" />\n            <Picker defaultValue=\"6\" id=\"page-size\" onChange={onPageSizeChange} options={pageSize} label=\"Boats Per Page\" />\n        </Grid>\n    </form>\n    );\n}\n\nexport default SearchAndFilterBoats","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nfunction Picker({ options, id, label, onChange, defaultValue }) {\n    const [value, setValue] = useState({name: defaultValue});\n\n    return (\n        <Autocomplete\n        defaultValue={value}\n        inputValue={defaultValue}\n        id={id}\n        options={options}\n        getOptionSelected={(t,v)=>(t.name === v.name)}\n        getOptionLabel={(option) => option.name}\n        onInputChange={(_, value) => {\n            setValue(value);\n            onChange(id, value);\n        }} \n        renderInput={\n            (params) => <TextField {...params} \n            label={label}\n            variant=\"outlined\" />}\n        />\n    );\n}\n\nexport default Picker","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TextList({ fields, data }) {\n    const r = [];\n    Object.keys(fields).forEach(key => {\n        const val = fields[key].access(data[key]);\n        if(val) {\n            r.push({ key, label: fields[key].label, text: val });\n        }\n    });\n    return (<div>{r.map(n => (<Typography key={n.key}>{`${n.label}: ${n.text}`}</Typography>))}</div>);\n}\n","import React from 'react';\nimport { \n    Button, Card, CardActions, CardActionArea, CardContent, CardMedia, Typography\n} from '@material-ui/core';\nimport TextList from './textlist';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst wanted = {\n    year: { label: 'Year Built', access: (n)=>n},\n    place_built: { label: 'Place Built', access: (n)=>n},\n    home_port: { label: 'Home Port', access: (n)=>n},\n    rigType: { label: 'Rig Type', access: (n)=>n},\n    designerByDesigner: { label: 'Designer', access: (n)=>n?n.name:undefined},\n    builderByBuilder: { label: 'Builder', access: (n)=>n?n.name:undefined},\n    previous_names: { label: 'Was', access: (n)=>(n.length>0)?n.join(', '):undefined}\n};\n\nexport default function BoatCard({ boat, classes }) {\n\n  const { loading, error, data } = useQuery\n    (gql`query{thumb(id:${boat.oga_no})}`,\n    { skip: !boat.image_key }\n    );\n\n  if (error) return <p>Error: (BoatCards)</p>;\n  \n  if (loading) {\n    if (data) {\n      console.log('Loading set but data here');\n    } else {\n      return <p>Loading...</p>;\n    }\n  }\n\n  const image = data && data.thumb;\n\n  function normaliseDescription(boat) {\n    if (boat && boat.short_description) {\n      const desc = boat.short_description.trim();\n      if (desc.startsWith('<p>')) {\n        return desc;\n      }\n      return `<p>${desc}</p>`;\n    }\n    return '';\n  }\n\n  return (\n    <Card className={image ? classes.card : classes.cardSmall}>\n    <CardActionArea>\n        {(image)?(\n        <CardMedia\n          className={classes.cardMedia}\n          image={image}\n          title={boat.name}\n        />):''}\n      <CardContent className={classes.cardContent} >\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {boat.name} ({boat.oga_no})\n        </Typography>\n        <Typography variant=\"body2\" \n        dangerouslySetInnerHTML={{ __html: normaliseDescription(boat) }}\n        />\n        <TextList fields={wanted} data={boat} />\n      </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" href={'/boat/'+boat.oga_no} color=\"primary\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport BoatCard from './boatcard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '100%',\n  },\n  cardMediaSmall: {\n    paddingTop: '56.25%',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport const query = (sort) => gql`\nquery boats($where: boat_bool_exp!, $limit: Int!, $offset: Int!) {\n    boat_aggregate(where: $where) { aggregate { totalCount: count } }\n    boat(limit: $limit, offset: $offset, order_by: ${sort}, where: $where) {\n      id name\n      oga_no\n      place_built\n      previous_names\n      home_port\n      short_description\n      year\n      builderByBuilder{name}\n      designerByDesigner{name}\n      design_class\n      image_key\n    }\n  }`;\n\nfunction BoatCards({\n  boatsPerPage = 12,\n  sortField = 'name',\n  sortDirection = 'asc',\n  where = {\n    _and: [\n      { year: { _gte: '1800' } },\n      { year: { _lte: new Date().getFullYear() } },\n      {image_key: { _is_null: false } } ,\n    ],\n  },\n  onLoad = function(n) {\n    console.log('boat cards loaded total is', n);\n  },\n}) {\n  const classes = useStyles();\n\n  const [page, setPage] = useState(1);\n  const { loading, error, data } = useQuery(\n    query(`{${sortField}: ${sortDirection}}`),\n    {\n      variables: {\n        limit: boatsPerPage,\n        offset: boatsPerPage * (page - 1),\n        where: where,\n      },\n    },\n  );\n  if (error) return <p>Error: (BoatCards)</p>;\n\n  if (loading) {\n    if (data) {\n      console.log('Loading set but data here');\n    } else {\n      return <p>Loading...</p>;\n    }\n  }\n\n  const totalCount = data?data.boat_aggregate.aggregate.totalCount:0; // should only happen in test\n\n  if (onLoad) {\n    onLoad(totalCount);\n  }\n\n  const pages = Math.ceil(totalCount / boatsPerPage);\n\n  function handlePageChange(event, page) {\n    setPage(page);\n  }\n\n  if (totalCount > 0) {\n    return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Pagination\n            count={pages}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={handlePageChange}\n          />\n          <Grid container spacing={4}>\n\n          {data.boat.map((boat) => (\n            <Grid item key={boat.oga_no} xs={12} sm={6} md={4}>\n              <BoatCard key={boat.oga_no} boat={boat} classes={classes} />\n            </Grid>\n          ))}\n          </Grid>\n          <Pagination\n          count={pages}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          onChange={handlePageChange}\n        />\n        </Container>\n      </main>\n      </React.Fragment>\n    );\n  }\n  return (\n    <p>\n      There are no boats which match the filter criteria you have set. Try\n      broadening the criteria.\n    </p>\n  );\n}\n\nexport default BoatCards;\n","import React, { useState } from 'react';\nimport { Container, Divider } from '@material-ui/core'\nimport SearchAndFilterBoats from './searchandfilterboats'\nimport BoatCards from './boatcards'\nimport { List, ListItem } from 'material-ui';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nfunction BrowseBoats() {\n    const [boatsPerPage, setBoatsPerPage] = useState(12);\n    const [sortField, setSortField] = useState('name');\n    const [sortDirection, setSortDirection] = useState('asc');\n    const [where, setWhere] = useState(undefined);\n\n    function updateFilters(filters) {\n        console.log(filters);\n        const all = [\n            { year: { _gte: filters.year.first } },\n            { year: { _lte: filters.year.last } },\n        ];\n        if (filters.ogaNo) {\n            all.push({oga_no: { _eq: filters.ogaNo }});\n        }\n        if (filters['boat-name']) {\n            all.push({ _or: [\n                { name: {_ilike: `${filters['boat-name']}%`}},\n                { previous_names: {_contains: filters['boat-name']}}    \n            ]});\n        }\n        if (filters['designer-name']) {\n            all.push({designerByDesigner: { name: { _eq: filters['designer-name'] } }});\n        }\n        if (filters['builder-name']) {\n            all.push({ buildersByBuilder: { name: { _eq: filters['builder-name']}}});\n        }\n        if (filters['rig-type']) {\n            all.push({rigTypeByRigType: { name: { _eq: filters['rig-type']}}});\n        }\n        if (filters['mainsail-type']) {\n            all.push({sail_type: { name: { _eq: filters['mainsail-type']}}});\n        }\n        if (filters['generic-type']) {\n            all.push({genericTypeByGenericType: { name: { _eq: filters['generic-type']}}});\n        }\n        if (filters['design-class']) {\n            all.push({designClassByDesignClass: { name: { _eq: filters['design-class']}}});\n        }\n        if (filters['construction-material']) {\n            all.push({constructionMaterialByConstructionMaterial: { name: { _eq: filters['construction-material'] } }});\n        }\n        if (!filters['nopics']) {\n            all.push({image_key: { _is_null: false }});\n        }\n        if (filters['sale']) {\n            all.push({for_sale_state: {text: {_eq: \"for_sale\"}}});\n        }\n        console.log('filters', all);\n        setWhere({ _and: all });\n    }\n\n    return (\n    <MuiThemeProvider>\n    <Container>\n        <h3>Welcome to the OGA Boat Register</h3>\n        <h4>We have hundreds of boats with pictures and many more waiting for pictures and more information.</h4>\n        <p>Filter the list using the options below and then click on 'Learn More' for all the pictures and information we have for that boat.</p>\n        <p>Have a boat and can't find it here. Fill in our <a href=\"https://form.jotform.com/jfbcable/new-boat\">form</a> and we will add it.</p>\n        <p>You can also use the form to suggest a boat whether you own it or not.</p>\n        <p>You'll can submit pictures, additions and corrections to boats or contact the owner from the boat's detail page.</p>\n        <p>Members can use the register to advertise their boat for sale. The first step is to make sure the boat is on the register.</p>\n        <SearchAndFilterBoats \n            onPageSizeChange={(_,a) => a && setBoatsPerPage(parseInt(a.name))}\n            onSortFieldChange={(_,a) => a && setSortField(a.name)}\n            onSortDirectionChange={event => setSortDirection(event.target.checked?'desc':'asc')}\n            onFilterChange={updateFilters}\n        />\n        <Divider/>\n        <BoatCards\n            boatsPerPage={boatsPerPage}\n            sortField={sortField}\n            sortDirection={sortDirection}\n            where={where}\n        />\n        <Divider/>\n        <p>Other great places to look for boats are:</p>\n        <List>\n            <ListItem><a href=\"https://www.nationalhistoricships.org.uk\">National Historic Ships</a></ListItem>\n            <ListItem><a href=\"https://nmmc.co.uk/explore/databases/\">NMM Cornwall</a> maintain a number of interesting databases including small boats, yacht designs</ListItem>\n        </List>     \n    </Container>\n    </MuiThemeProvider>\n    );\n}\n\nexport default BrowseBoats","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function ConditionalText({ label, value }) {\n    if (value) {\n        let text = Array.isArray(value)?value.join(', '):value;\n        if (text.name) { text = text.name; }\n        if (text !== '') {\n            return (<Typography><Box fontWeight=\"bold\" component=\"span\">{label}:</Box> <Box component=\"span\">{text}</Box></Typography>)\n        }\n    }\n    return '';\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport default function SailTable( { rows, classes }) {\n    return (\n    <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"sail data\">\n        <TableHead>\n            <TableRow>\n            <TableCell></TableCell>\n            <TableCell align=\"right\">luff</TableCell>\n            <TableCell align=\"right\">head</TableCell>\n            <TableCell align=\"right\">foot</TableCell>\n            </TableRow>\n        </TableHead>\n        <TableBody>\n            {rows.map((row) => \n            (<TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.luff}</TableCell>\n                <TableCell align=\"right\">{row.head}</TableCell>\n                <TableCell align=\"right\">{row.foot}</TableCell>\n            </TableRow>\n            ))}\n        </TableBody>\n        </Table>\n    </TableContainer>\n    );\n}","import React from 'react';\nimport Iframe from 'react-iframe'\n\nconst url = 'https://oga.smugmug.com/frame/slideshow'\nconst queryString = 'autoStart=1&captions=1&navigation=1'\n    +'&playButton=1&randomize=1&speed=3&transition=fade&transitionSpeed=2'\n\nconst SmugMugGallery = ({ classes, albumKey }) => {\n    if (albumKey) {\n        return (\n            <Iframe\n            url={`${url}?key=${albumKey}&${queryString}`}\n            width=\"800\" \n            height=\"600\" \n            frameborder=\"no\" \n            scrolling=\"no\"\n            className={classes.iframe}\n            />\n        );    \n    }\n    return null\n}\n\nexport default SmugMugGallery","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport SwipeableViews from 'react-swipeable-views';\nimport TabPanel from './tabpanel';\nimport ConditionalText from './conditionaltext';\nimport SailTable from './sailtable';\nimport SmugMugGallery from './smugmuggallery';\n\nfunction m2f(val) {\n    if(val) {\n        return `${(val*100/2.54/12).toFixed(2)} ft`;\n    }\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 600,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  iframe: {\n    border: 'none !important'\n  }\n}));\n\nconst boatQuery = (id) => gql`{\n    boat(where: {oga_no: {_eq: ${id}}}) {\n    id\n    name\n    previous_names\n    year\n    year_is_approximate\n    public\n    place_built\n    home_port\n    home_country\n    ssr\n    sail_number\n    nhsr\n    nsbr\n    oga_no\n    fishing_number\n    callsign\n    mssi\n    full_description\n    image_key\n    uk_part1\n    constructionMaterialByConstructionMaterial { name }\n    constructionMethodByConstructionMethod { name }\n    construction_details\n    construction_notes\n    designClassByDesignClass { name }\n    designerByDesigner { name }\n    draft\n    generic_type\n    handicap_data\n    hull_form\n    keel_laid\n    launched\n    length_on_deck\n    mainsail_type\n    rigTypeByRigType { name }\n    sail_type { name }\n    short_description\n    updated_at\n    website\n    genericTypeByGenericType { name }\n    builderByBuilder { name notes }\n    beam\n    air_draft\n    for_sale_state { text }\n    for_sales(limit: 1, order_by: {updated_at: desc}) {\n      asking_price\n      flexibility\n      offered\n      price_flexibility { text }\n      reduced\n      sales_text\n      sold\n      summary\n      updated_at\n    }\n    engine_installations {\n      engine\n      installed\n      removed\n    }\n  }\n  }`;\n\n\nexport default function Boat({ id }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const { loading, error, data } = useQuery(boatQuery(id));\n\n  useEffect(() => {\n      if (data) {\n          document.title = data.boat[0].name;\n      }\n  });\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: (Boat)</p>;\n  const boat = data.boat[0];\n  console.log(boat);\n\n  const panes = [\n    { title: 'Registration and location', children: (\n        <Paper>\n        <ConditionalText value={boat.previous_names} label=\"Previous name/s\"/>\n        <ConditionalText value={boat.place_built} label=\"Place built\"/>\n        <ConditionalText value={boat.home_country} label=\"Home Country\"/>\n        <ConditionalText value={boat.year_is_approximate?'around ':''+boat.year} label=\"Year of Build\"/>\n        <ConditionalText value={boat.sail_number} label=\"Sail No.\"/>\n        <ConditionalText value={boat.ssr} label=\"Small Ships Registry no. (SSR)\"/>\n        <ConditionalText value={boat.nhsr} label=\"National Register of Historic Vessels no. (NRHV)\"/>\n        <ConditionalText value={boat.fishing_number} label=\"Fishing No.\"/>\n        <ConditionalText value={boat.callsign} label=\"Call Sign\"/>\n        <ConditionalText value={boat.nsbr} label=\"National Small Boat Register\"/>\n        <ConditionalText value={boat.uk_part1} label=\"Official Registration\" />     \n        </Paper>)\n     },\n    { title: 'Construction', children: (\n        <Paper>\n        <ConditionalText value={boat.genericTypeByGenericType} label=\"Generic type\"/>\n        <ConditionalText value={boat.hull_form.replace(/_/g, ' ')} label=\"Hull form\"/>\n        <ConditionalText value={boat.builderByBuilder} label=\"Builder\"/>\n        <ConditionalText value={boat.constructionMaterialByConstructionMaterial} label=\"Construction material\"/>\n        <ConditionalText value={boat.constructionMethodByConstructionMethod} label=\"Construction method\"/>\n        <ConditionalText value={boat.construction_details} label=\"Construction details\"/>\n        <ConditionalText value={boat.construction_notes} label=\"Construction notes\"/>\n        </Paper>\n        )    \n    },\n    { title: 'Hull', children: (<Paper>\n        <ConditionalText value={m2f(boat.length_on_deck)} label=\"Length on deck (LOD)\"/>\n        <ConditionalText label=\"Length overall (LOA)\" value={m2f(boat.handicap_data?boat.handicap_data.length_overall:undefined)}/>\n        <ConditionalText label=\"Waterline Length (LWL)\" value={m2f(boat.handicap_data?boat.handicap_data.length_on_waterline:undefined)}/>\n        <ConditionalText value={m2f(boat.beam)} label=\"Beam\"/>\n        <ConditionalText value={m2f(boat.draft)} label=\"Draft\"/>        \n    </Paper>)},\n  ];\n\n  if (boat.full_description) {\n    panes.unshift(\n        { title: 'Full Description', children: (<Paper dangerouslySetInnerHTML={{ __html: boat.full_description }} />) },\n    );\n  }\n  \n  if (boat.handicap_data) {\n    const data = boat.handicap_data;\n    const sails = [];\n    Object.entries(data).forEach(([key, value]) => {\n        if (value.luff) {\n            sails.push({ name: key, ...value });\n        }\n    });\n    if(data.main || data.thcf || data.calculated_thcf || data.fore_triangle_base) {\n        panes.push({ title: 'Rig and Sails', children: (\n            <Paper>\n            <ConditionalText label=\"fore triangle base\" value={m2f(data.fore_triangle_base)}/>\n            <ConditionalText label=\"fore triangle height\" value={m2f(data.fore_triangle_height)}/>\n            <ConditionalText label=\"Calculated THCF\" value={data.calculated_thcf}/>\n            <ConditionalText label=\"THCF\" value={data.thcf}/>\n            <SailTable classes={classes} rows={sails}/>\n            </Paper>\n        )});    \n    }\n\n/*\nconst engine = {\n    engine_make: { label: 'Engine make:' },\n    engine_power: { label: 'Engine power:' },\n    engine_date: { label: 'Engine date:' },\n    engine_fuel: { label: 'Engine fuel:' },\n    previous_engine: { label: 'Previous engine(s):' },\n    propellor_blades: { label: 'Propeller blades:' },\n    propellor_type: { label: 'Propeller type:' },\n    propellor_position: { label: 'Propeller position:' }\n};\n\n*/\n    //if (engineItems.length > 0) {\n    //  panes.push({ title: 'Engine', render: () => <Tab.Pane><List>{engineItems}</List></Tab.Pane> });\n    //}\n  }\n\n  if (boat.for_sale_state && boat.for_sale_state.text === 'for_sale') {\n    const fs = boat.for_sales[0];\n    const price = new Intl.NumberFormat('en-GB', { currency: 'GBP', style: 'currency' }\n    ).format(fs.asking_price);\n\n    panes.unshift(\n        { title: 'For Sale', children: (\n             <Paper>\n            <ConditionalText label=\"Price\" value={price}/>\n            <div dangerouslySetInnerHTML={{ __html: fs.sales_text }} />\n            <Box width={1/3}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField fullWidth=\"true\" type=\"email\" id=\"sender-email\" label=\"Enter your email to make an enquiry\" />\n            <Button\n                size=\"small\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    endIcon={<Icon>send</Icon>}\n                >Send</Button>\n            </form>\n            </Box>\n            </Paper>\n        ) },\n    );\n  }\n  \n const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <main className={classes.content}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n                <Typography variant=\"h3\" component=\"h3\">{boat.name}</Typography>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Typography variant=\"h3\" component=\"h3\">{boat.year}</Typography>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <SmugMugGallery classes={classes} albumKey={boat.image_key} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Typography variant=\"h4\" component=\"h4\">Details</Typography>\n                <ConditionalText value={boat.oga_no} label=\"OGA no\"/>\n                <ConditionalText value={boat.mainsail_type} label=\"Mainsail\"/>\n                <ConditionalText value={boat.rigTypeByRigType.name} label=\"Rig\"/>\n                <ConditionalText value={boat.home_port} label=\"Home port or other location\"/>\n                <div dangerouslySetInnerHTML={{ __html: boat.short_description }}></div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n            <AppBar position=\"static\" color=\"white\">\n                <Tabs\n                onChange={handleChange}\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                { panes.map((pane, i) => (<Tab key={i} label={pane.title}/>))}\n                </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                >\n                {panes.map((pane, i) => (\n                    <TabPanel key={i} value={value} index={i}>\n                        {pane.children}\n                    </TabPanel>\n                ))}\n                </SwipeableViews>\n            </Grid>\n          </Grid>\n            <Paper>\n              <Grid container direction=\"row\" alignItems=\"flex-end\">\n              <Grid item xs={2}>\n              <Button size=\"small\"\n              variant=\"contained\"\n              className={classes.button}\n               href={'/'} >See more boats</Button>\n               </Grid>\n               <Grid item xs={2} >\n               <TextField fullWidth=\"true\" type=\"email\" id=\"sender-email\" label=\"Enter your email\" />\n               </Grid>\n               <Grid item xs={7} >\n              <Button size=\"small\" \n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              endIcon={<Icon>send</Icon>}\n              >Contact the owner</Button>\n              <Button size=\"small\" \n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              endIcon={<Icon>send</Icon>}\n              >Add pictures / text</Button>\n              <Button size=\"small\" \n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              endIcon={<Icon>send</Icon>}\n              >Request a handicap</Button>\n              </Grid>\n              </Grid>\n            </Paper>\n        </Container>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport ApolloClient from \"apollo-client\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { useRoutes } from 'hookrouter';\nimport './App.css';\nimport Main from './components/main';\nimport BrowseBoats from './components/browseboats';\nimport Boat from './components/boat';\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: \"https://api-oga.herokuapp.com/v1/graphql\",\n  }),\n  cache: new InMemoryCache()\n});\n\nconst routes = {\n  \"/\": () => <ApolloProvider client={client}><BrowseBoats /></ApolloProvider>,\n  \"/boat/:id\": ({id}) => <ApolloProvider client={client}><Boat id={id}/></ApolloProvider>,\n  \"/iframe\": () => <Main />\n};\n\nfunction App() {\n  const routeResult = useRoutes(routes)\n  return routeResult\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}