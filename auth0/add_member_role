/**
* Handler that will be called during the execution of a PostLogin flow.
*
* @param {Event} event - Details about the user and the context in which they are logging in.
* @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.
*/
exports.onExecutePostLogin = async (event, api) => {
  if (event.stats.logins_count > 20) {
    return;
  }

  const ManagementClient = require('auth0').ManagementClient;
  const Airtable = require('airtable');

  const management = new ManagementClient({
      domain: event.secrets.domain,
      clientId: event.secrets.clientId,
      clientSecret: event.secrets.clientSecret,
  });

  let fields;
  const { user } = event;
  try {
    const airtable = new Airtable({apiKey: event.secrets.airtableApiKey});
    const p = {filterByFormula: `AND({Email}='${user.email}',NOT({Status}="Left OGA"))`};
    const lower = airtable.base('appTFgTKW8TvB69Hf');
    const l = await lower('Members').select(p).firstPage();
    const upper = airtable.base('apppi7qDbPjSJYKBY');
    const u = await upper('Members').select(p).firstPage();
    const r = [...l, ...u];
    if (r.length>0) {
     fields = r[0].fields;
    }
  } catch (e1) {
    console.log('can\'t get data from airtable');
    console.log(e1);
  }     
  if (fields) {
    console.log('result', fields.ID, fields['Member Number']);
    const params =  { id : user.user_id};
    try {
      const res = await management.assignRolestoUser(params, {
        roles : ["rol_70khez7eAikaz2YW"]
      });
      console.log('member role added', JSON.stringify(res));
    } catch (e2) {
      console.log('management api assignRolestoUser call failed');
      console.log(e2);
    }
    try {
      // api.user.setUserMetadata('id', fields.ID);
      api.user.setAppMetadata('id', fields.ID);
      api.user.setAppMetadata('member', fields['Member Number']);
    } catch (e3) {
      console.log('api setAppMetadata call failed');
      console.log(e3);
    }
  } else {
    console.log('nothing returned from airtable')
  } 
};
