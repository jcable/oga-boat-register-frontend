{"version":3,"sources":["components/main.js","components/searchandfilterboats.js","components/picker.js","components/textlist.js","components/boatcard.js","components/boatcards.js","components/browseboats.js","components/imagecarousel.js","components/boat.js","components/rigandsails.js","App.js","serviceWorker.js","index.js"],"names":["Main","Picker","options","id","label","onChange","defaultValue","useState","name","value","setValue","Autocomplete","inputValue","getOptionSelected","t","v","getOptionLabel","option","onInputChange","_","renderInput","params","TextField","variant","sortFields","pageSize","i","push","useStyles","makeStyles","theme","root","margin","spacing","width","SearchAndFilterBoats","onFilterChange","onPageSizeChange","onSortFieldChange","onSortDirectionChange","after","until","Date","getFullYear","classes","names","setNames","ogaNo","setOgaNo","firstYear","lastYear","year","setYear","update","f","console","log","useEffect","useQuery","gql","loading","error","data","boat","designer","builder","rig_type","sail_type","design_class","generic_type","construction_material","currentBoatNames","map","b","previousBoatNames","previous_names","flat","setOfBoats","Set","allBoatNames","sort","a","toLowerCase","localeCompare","shift","boatNames","n","__typename","sw","event","val","target","pl","sy","length","y","className","Grid","container","direction","justify","alignItems","min","max","FormControlLabel","control","Switch","TextList","fields","r","Object","keys","forEach","key","access","text","Typography","noimage","minHeight","title","fontSize","textnoimage","pos","marginBottom","media","height","wanted","place_built","home_port","rigType","designerByDesigner","undefined","builderByBuilder","join","BoatCard","oga_no","skip","image_key","image","thumb","Card","CardActionArea","CardMedia","CardContent","component","dangerouslySetInnerHTML","__html","short_description","desc","trim","startsWith","normaliseDescription","CardActions","Button","size","href","BoatCards","boatsPerPage","sortField","sortDirection","where","_and","_gte","_lte","_is_null","onLoad","page","setPage","variables","limit","offset","totalCount","boat_aggregate","aggregate","pages","Math","ceil","handlePageChange","Pagination","count","shape","BrowseBoats","setBoatsPerPage","setSortField","setSortDirection","setWhere","Container","parseInt","checked","filters","all","first","last","_eq","_or","_ilike","_contains","buildersByBuilder","rigTypeByRigType","genericTypeByGenericType","designClassByDesignClass","constructionMaterialByConstructionMaterial","for_sale_state","Divider","ImageCarousel","registration","prev_name","approximate_year_of_build","sail_no","home_country","ssr_no","nhsr_no","fishing_no","call_sign","other_registries","nsbr_no","off_reg_no","port_reg","construction","construction_method","class","hullType","genericType","hull","length_overall","unit","length_on_waterline","beam","draft","engine","engine_make","engine_power","engine_date","engine_fuel","previous_engine","propellor_blades","propellor_type","propellor_position","Boat","boatQuery","document","columns","divided","Row","Column","images","client","ApolloClient","link","createHttpLink","uri","headers","cache","InMemoryCache","routes","App","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","unregister","catch","message"],"mappings":"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","file":"static/js/main.5f1c568a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Main() {\n    return (<div>Main</div>);\n}\n\nexport default Main","import React, { useState, useEffect } from 'react'\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FormControlLabel, Grid, Switch, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Picker from './picker'\n\nconst sortFields = [\n    { name: \"Boat Name\" },\n    { name: \"OGA No.\" },\n    { name: \"Year Built\" },\n    { name: \"Last Updated\" },\n    { name: \"Price\" },\n];\nconst pageSize = [];\nfor(let i=1; i<=8; i++) {\n    pageSize.push({name: `${6*i}` });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nfunction SearchAndFilterBoats({\n    onFilterChange,\n    onPageSizeChange,\n    onSortFieldChange,\n    onSortDirectionChange,\n    after=1800,\n    until=(new Date()).getFullYear() + 1,\n}) {\n    const classes = useStyles();\n\n    const [names, setNames] = useState({});\n    const [ogaNo, setOgaNo] = useState();\n    const [year, setYear] = useState({ firstYear: after, lastYear: until });\n    \n    function update() {\n        const f = { ...names, ogaNo, year };\n        console.log('updateFilters', f);\n        if(onFilterChange) onFilterChange(f);\n    }\n\n    useEffect(update, [names, ogaNo, year]);\n\n    const { loading, error, data } = useQuery(gql(`{\n        boat{name previous_names}\n        designer(order_by: {name: asc}){name}\n        builder(order_by: {name: asc}){name}\n        rig_type(order_by: {name: asc}){name}\n        sail_type(order_by: {name: asc}){name}\n        design_class(order_by: {name: asc}){name}\n        generic_type(order_by: {name: asc}){name}\n        construction_material(order_by: {name: asc}){name}\n    }`));\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(SearchAndFilterBoats)</p>;\n\n    const { boat, designer, builder, rig_type, sail_type, design_class, generic_type, construction_material } = data;\n\n    const currentBoatNames = boat.map((b) => (b.name));\n    const previousBoatNames = boat.map((b) => b.previous_names).flat();\n    const setOfBoats = new Set([...currentBoatNames, ...previousBoatNames]);\n    const allBoatNames = [...setOfBoats];\n    allBoatNames.sort((a, b) => (a.toLowerCase().localeCompare(b.toLowerCase())));\n    if (allBoatNames[0] === '') allBoatNames.shift();\n    const boatNames = allBoatNames.map((n) => ({ name: n, __typename: 'boat' }));\n\n    function sw(event, val) {\n        if (event.target.id) {\n            const n = names;\n            n[event.target.id] = val;\n            setNames(n);\n            update(); \n        }\n    }\n\n    function pl(id, value) {\n        const n = names;\n        if (value) {\n            n[id] = value;\n        } else {\n            delete n[id];\n        }\n        setNames(n);\n        update(); \n}\n\n    function o(event) {\n        setOgaNo(event.target.value);\n        update(); \n    }\n\n    function sy(event) {\n        console.log('sy', event);\n        const { id, value } = event.target;\n        if (value.length === 4) {\n            const y = year;\n            y[id] = value;\n            setYear(y);    \n            update(); \n        }\n    }\n\n    return (\n    <form className={classes.root}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\n            <Picker onChange={pl} id=\"boat-name\" options={boatNames} label=\"Boat Name\" />\n            <TextField onChange={o} id=\"oga-no\" label=\"OGA Boat No.\" variant=\"outlined\" />\n            <Picker onChange={pl} id=\"designer-name\" options={designer} label=\"Designer\" />\n            <Picker onChange={pl} id=\"builder-name\" options={builder} label=\"Builder\" />\n            <TextField onChange={sy} id=\"firstYear\" label=\"Built After\" min={after} max=\"\" defaultValue={after} variant=\"outlined\" />\n            <TextField onChange={sy} id=\"lastYear\" label=\"Built Before\" min={after} max={until} defaultValue={until} variant=\"outlined\" />\n            <Picker onChange={pl} id=\"rig-type\" options={rig_type} label=\"Rig Type\" />\n            <Picker onChange={pl} id=\"mainsail-type\" options={sail_type} label=\"Mainsail Type\" />\n            <Picker onChange={pl} id=\"generic-type\" options={generic_type} label=\"Generic Type\" />\n            <Picker onChange={pl} id=\"design-class\" options={design_class} label=\"Design Class\" />\n            <Picker onChange={pl} id=\"construction-material\" options={construction_material} label=\"Construction Material\" />\n            <FormControlLabel control={<Switch id=\"nopics\" onChange={sw} />} label=\"include boats without pictures\" />\n            <FormControlLabel control={<Switch id=\"sale\" onChange={sw} />} label=\"only boats for sale\" />\n            <Picker defaultValue=\"name\" id=\"sort-field\" onChange={onSortFieldChange} options={sortFields} label=\"Sort By\" />\n            <FormControlLabel id=\"sort-direction\" onChange={onSortDirectionChange} control={<Switch />} label=\"reversed\" />\n            <Picker defaultValue=\"6\" id=\"page-size\" onChange={onPageSizeChange} options={pageSize} label=\"Boats Per Page\" />\n        </Grid>\n    </form>\n    );\n}\n\nexport default SearchAndFilterBoats","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nfunction Picker({ options, id, label, onChange, defaultValue }) {\n    const [value, setValue] = useState({name: defaultValue});\n\n    return (\n        <Autocomplete\n        defaultValue={value}\n        inputValue={defaultValue}\n        id={id}\n        options={options}\n        getOptionSelected={(t,v)=>(t.name === v.name)}\n        getOptionLabel={(option) => option.name}\n        onInputChange={(_, value) => {\n            setValue(value);\n            onChange(id, value);\n        }} \n        renderInput={\n            (params) => <TextField {...params} \n            label={label}\n            variant=\"outlined\" />}\n        />\n    );\n}\n\nexport default Picker","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function TextList({ fields, data }) {\n    const r = [];\n    Object.keys(fields).forEach(key => {\n        const val = fields[key].access(data[key]);\n        if(val) {\n            r.push({ key, label: fields[key].label, text: val });\n        }\n    });\n    return (<div>{r.map(n => (<Typography key={n.key}>{`${n.label}: ${n.text}`}</Typography>))}</div>);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Button, Card, CardActions, CardActionArea, CardContent, CardMedia, Typography\n} from '@material-ui/core';\nimport TextList from './textlist';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst useStyles = makeStyles({\n  noimage: {\n    width: 300,\n    minHeight: 200,\n  },\n  root: {\n    width: 300,\n    minHeight: 640,\n  },\n  title: {\n    fontSize: 14,\n  },\n  text: {\n    minHeight: 250,\n  },\n  textnoimage: {\n    minHeight: 150,\n  },\n  pos: {\n    marginBottom: 6,\n  },\n  media: {\n    height: 300,\n  }\n});\n\nconst wanted = {\n    year: { label: 'Year Built', access: (n)=>n},\n    place_built: { label: 'Place Built', access: (n)=>n},\n    home_port: { label: 'Home Port', access: (n)=>n},\n    rigType: { label: 'Rig Type', access: (n)=>n},\n    designerByDesigner: { label: 'Designer', access: (n)=>n?n.name:undefined},\n    builderByBuilder: { label: 'Builder', access: (n)=>n?n.name:undefined},\n    previous_names: { label: 'Was', access: (n)=>(n.length>0)?n.join(', '):undefined}\n};\n\nexport default function BoatCard({ boat }) {\n\n  const { loading, error, data } = useQuery\n    (gql`query{thumb(id:${boat.oga_no})}`,\n    { skip: !boat.image_key }\n    );\n\n  const classes = useStyles();\n\n  if (error) return <p>Error: (BoatCards)</p>;\n  \n  if (loading) {\n    if (data) {\n      console.log('Loading set but data here');\n    } else {\n      return <p>Loading...</p>;\n    }\n  }\n\n  const image = data && data.thumb;\n\n  function normaliseDescription(boat) {\n    if (boat && boat.short_description) {\n      const desc = boat.short_description.trim();\n      if (desc.startsWith('<p>')) {\n        return desc;\n      }\n      return `<p>${desc}</p>`;\n    }\n    return '';\n  }\n\n\n  return (\n    <Card className={image ? classes.root : classes.noimage}>\n    <CardActionArea>\n        {(image)?(\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={boat.name}\n        />):''}\n      <CardContent className={image ? classes.text : classes.textnoimage} >\n        <Typography variant=\"h5\" component=\"h2\">\n        {boat.name} ({boat.oga_no})\n        </Typography>\n        <Typography variant=\"body2\" \n        dangerouslySetInnerHTML={{ __html: normaliseDescription(boat) }}\n        />\n        <TextList fields={wanted} data={boat} />\n      </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" href={'/boats/'+boat.oga_no} >Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport BoatCard from './boatcard';\n\nconst query = (sort) => gql`\nquery boats($where: boat_bool_exp!, $limit: Int!, $offset: Int!) {\n    boat_aggregate(where: $where) { aggregate { totalCount: count } }\n    boat(limit: $limit, offset: $offset, order_by: ${sort}, where: $where) {\n      id name\n      oga_no\n      place_built\n      previous_names\n      home_port\n      short_description\n      year\n      builderByBuilder{name}\n      designerByDesigner{name}\n      design_class\n      image_key\n    }\n  }`;\n\nfunction BoatCards({\n  boatsPerPage = 12,\n  sortField = 'name',\n  sortDirection = 'asc',\n  where = {\n    _and: [\n      { year: { _gte: '1800' } },\n      { year: { _lte: new Date().getFullYear() } },\n      {image_key: { _is_null: false } } ,\n    ],\n  },\n  onLoad = function(n) {\n    console.log('boat cards loaded total is', n);\n  },\n}) {\n\n  const [page, setPage] = useState(1);\n\n  const { loading, error, data } = useQuery(\n    query(`{${sortField}: ${sortDirection}}`),\n    {\n      variables: {\n        limit: boatsPerPage,\n        offset: boatsPerPage * (page - 1),\n        where: where,\n      },\n    },\n  );\n  if (error) return <p>Error: (BoatCards)</p>;\n\n  if (loading) {\n    if (data) {\n      console.log('Loading set but data here');\n    } else {\n      return <p>Loading...</p>;\n    }\n  }\n\n  const totalCount = data.boat_aggregate.aggregate.totalCount;\n\n  if (onLoad) {\n    onLoad(totalCount);\n  }\n\n  const pages = Math.ceil(totalCount / boatsPerPage);\n\n  function handlePageChange(event, page) {\n    setPage(page);\n  }\n\n  if (totalCount > 0) {\n    return (\n      <div>\n        <Pagination\n          count={pages}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          onChange={handlePageChange}\n        />\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={12}>\n          {data.boat.map((boat) => (\n            <BoatCard key={boat.oga_no} boat={boat} />\n          ))}\n          ;\n        </Grid>\n        <Pagination\n          count={pages}\n          variant=\"outlined\"\n          shape=\"rounded\"\n          onChange={handlePageChange}\n        />\n      </div>\n    );\n  }\n  return (\n    <p>\n      There are no boats which match the filter criteria you have set. Try\n      broadening the criteria.\n    </p>\n  );\n}\n\nexport default BoatCards;\n","import React, { useState } from 'react';\nimport { Container, Divider } from '@material-ui/core'\nimport SearchAndFilterBoats from './searchandfilterboats'\nimport BoatCards from './boatcards'\nimport { List, ListItem } from 'material-ui';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nfunction BrowseBoats() {\n    const [boatsPerPage, setBoatsPerPage] = useState(12);\n    const [sortField, setSortField] = useState('name');\n    const [sortDirection, setSortDirection] = useState('asc');\n    const [where, setWhere] = useState(undefined);\n\n    function updateFilters(filters) {\n        console.log(filters);\n        const all = [\n            { year: { _gte: filters.year.first } },\n            { year: { _lte: filters.year.last } },\n        ];\n        if (filters.ogaNo) {\n            all.push({oga_no: { _eq: filters.ogaNo }});\n        }\n        if (filters['boat-name']) {\n            all.push({ _or: [\n                { name: {_ilike: `${filters['boat-name']}%`}},\n                { previous_names: {_contains: filters['boat-name']}}    \n            ]});\n        }\n        if (filters['designer-name']) {\n            all.push({designerByDesigner: { name: { _eq: filters['designer-name'] } }});\n        }\n        if (filters['builder-name']) {\n            all.push({ buildersByBuilder: { name: { _eq: filters['builder-name']}}});\n        }\n        if (filters['rig-type']) {\n            all.push({rigTypeByRigType: { name: { _eq: filters['rig-type']}}});\n        }\n        if (filters['mainsail-type']) {\n            all.push({sail_type: { name: { _eq: filters['mainsail-type']}}});\n        }\n        if (filters['generic-type']) {\n            all.push({genericTypeByGenericType: { name: { _eq: filters['generic-type']}}});\n        }\n        if (filters['design-class']) {\n            all.push({designClassByDesignClass: { name: { _eq: filters['design-class']}}});\n        }\n        if (filters['construction-material']) {\n            all.push({constructionMaterialByConstructionMaterial: { name: { _eq: filters['construction-material'] } }});\n        }\n        if (!filters['nopics']) {\n            all.push({image_key: { _is_null: false }});\n        }\n        if (filters['sale']) {\n            all.push({for_sale_state: {text: {_eq: \"for_sale\"}}});\n        }\n        console.log('filters', all);\n        setWhere({ _and: all });\n    }\n\n    return (\n    <MuiThemeProvider>\n    <Container>\n        <h3>Welcome to the OGA Boat Register</h3>\n        <h4>We have hundreds of boats with pictures and many more waiting for pictures and more information.</h4>\n        <p>Filter the list using the options below and then click on a boat for all the pictures and information we have for that boat.</p>\n        <p>Have a boat and can't find it here. Fill in our <a href=\"https://form.jotform.com/jfbcable/new-boat\">form</a> and we will add it.</p>\n        <p>You can also use the form to suggest a boat whether you own it or not.</p>\n        <p>You'll can submit pictures, additions and corrections to boats or contact the owner from the boat's detail page.</p>\n        <p>Members can use the register to advertise their boat for sale. The first step is to make sure the boat is on the register.</p>\n        <SearchAndFilterBoats \n            onPageSizeChange={(_,a) => a && setBoatsPerPage(parseInt(a.name))}\n            onSortFieldChange={(_,a) => a && setSortField(a.name)}\n            onSortDirectionChange={event => setSortDirection(event.target.checked?'desc':'asc')}\n            onFilterChange={updateFilters}\n        />\n        <Divider/>\n        <BoatCards\n            boatsPerPage={boatsPerPage}\n            sortField={sortField}\n            sortDirection={sortDirection}\n            where={where}\n        />\n        <Divider/>\n        <p>Other great places to look for boats are:</p>\n        <List>\n            <ListItem><a href=\"https://www.nationalhistoricships.org.uk\">National Historic Ships</a></ListItem>\n            <ListItem><a href=\"https://nmmc.co.uk/explore/databases/\">NMM Cornwall</a> maintain a number of interesting databases including small boats, yacht designs</ListItem>\n        </List>     \n    </Container>\n    </MuiThemeProvider>\n    );\n}\n\nexport default BrowseBoats","export default function ImageCarousel() {\n    return \"\";\n}","import React, { useEffect } from 'react';\nimport { Grid, Typography } from '@material-ui/core'\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport RigAndSails from './rigandsails';\nimport ImageCarousel from './imagecarousel';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import TextList from './textlist';\n\nconst boatQuery = (id) => gql`{\n    boat(id:${id}) {\n        name prev_name\n        year approximate_year_of_build\n        place_built home_country home_port\n        sail_no ssr_no nhsr_no fishing_no call_sign\n        other_registries nsbr_no off_reg_no port_reg\n        short_desc full_desc\n        for_sale sale_text price\n        images{\n            uri\n            copyright\n            height width title alt\n        }\n        class{\n            name\n            rigType\n            mainsailType\n            hullType\n            genericType\n        }\n        builder{name}\n        construction_material\n        construction_method\n        beam\n        draft\n        length_on_waterline\n        length_overall\n        propulsion{\n            propellor_type\n            propellor_position\n            propellor_blades\n            engine_fuel\n            engine_position\n            engine_date\n            engine_make\n            engine_power\n            hp\n            previous_engine\n        }\n    }\n  }`;\n\nconst registration = {\n    prev_name: { label: 'Previous name/s' },\n    place_built: { label: 'Place built' },\n    year: { label: 'Year of Build' },\n    approximate_year_of_build: { label: 'Approximate Year of Build' },\n    sail_no: { label: 'Sail No.' },\n    home_country: { label: 'Home Country' },\n    ssr_no: { label: 'Small Ships Registry no. (SSR)' },\n    nhsr_no: { label: 'National Register of Historic Vessels no. (NRHV)' },\n    fishing_no: { label: 'Fishing No.' },\n    call_sign: { label: 'Call Sign' },\n    other_registries: { label: 'Other Registrations' },\n    nsbr_no: { label: 'National Small Boat Register' },\n    off_reg_no: { label: 'Official Registration' },\n    port_reg: { label: 'Port of Registry' }\n};\n\nconst construction = {\n    construction_method: { label: 'Construction method' },\n    construction_material: { label: 'Construction material' },\n    class: {\n        hullType: { label: 'Hull Type' },\n        genericType: { label: 'Generic Type ' },\n    },\n    builder: { name: { label: 'Builder' } }\n};\n\nconst hull = {\n    length_overall: { label: 'Length on deck (LOD):', unit: 'ft' },\n    length_on_waterline: { label: 'Length on waterline (LWL):', unit: 'ft' },\n    beam: { label: 'Beam', unit: 'ft' },\n    draft: { label: 'Draft', unit: 'ft' }\n};\n\nconst engine = {\n    engine_make: { label: 'Engine make:' },\n    engine_power: { label: 'Engine power:' },\n    engine_date: { label: 'Engine date:' },\n    engine_fuel: { label: 'Engine fuel:' },\n    previous_engine: { label: 'Previous engine(s):' },\n    propellor_blades: { label: 'Propeller blades:' },\n    propellor_type: { label: 'Propeller type:' },\n    propellor_position: { label: 'Propeller position:' }\n};\n\nexport default function Boat({ id }) {\n    \n    const { loading, error, data } = useQuery(boatQuery(id));\n\n    useEffect(() => {\n        if (data) {\n            document.title = data.boat.name;\n        }\n    });\n\n    const rigItems = RigAndSails({ id }); // uses hooks so must be unconditional\n\n    console.log(registration, construction, hull, engine, rigItems);\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error: (Boat)</p>;\n    const boat = data.boat;\n\n    /*\n    const panes = [\n        { menuItem: 'Registration and location', render: () => <Tab.Pane><List><ListItems labels={registration} boat={boat} /></List></Tab.Pane> },\n        { menuItem: 'Construction', render: () => <Tab.Pane><List><ListItems labels={construction} boat={boat} /></List></Tab.Pane> },\n        { menuItem: 'Hull', render: () => <Tab.Pane><List><ListItems labels={hull} boat={boat} /></List></Tab.Pane> },\n    ];\n    \n    if (rigItems.length > 0) {\n        panes.push({ menuItem: 'Rig and Sails', render: () => <Tab.Pane><List>{rigItems}</List></Tab.Pane> });\n    }\n    const engineItems = ListItems({ labels: engine, boat: boat.propulsion });\n    if (engineItems.length > 0) {\n        panes.push({ menuItem: 'Engine', render: () => <Tab.Pane><List>{engineItems}</List></Tab.Pane> });\n    }\n    \n\n    if (boat.full_desc) {\n        panes.unshift(\n            { menuItem: 'Full Description', render: () => <Tab.Pane dangerouslySetInnerHTML={{ __html: boat.full_desc }} /> },\n        );\n    }\n    \n\n    if (boat.for_sale) {\n        let text = boat.sale_text;\n        if (boat.price) {\n            text += \"<b>Price: </b>\" + boat.price;\n        }\n        panes.unshift({\n            menuItem: 'For Sale', render: () => <Tab.Pane dangerouslySetInnerHTML={{ __html: text }} />\n        });\n    }\n    */\n\n    return (\n    <MuiThemeProvider>\n    <Grid columns={2} divided>\n        <Grid.Row>\n            <Grid.Column width={10}>\n                <Typography variant=\"h1\">{boat.name}</Typography>\n            </Grid.Column>\n            <Grid.Column width={1}>\n                <Typography variant=\"h1\">{boat.year}</Typography>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column width={13}>\n                <ImageCarousel images={boat.images} />\n            </Grid.Column>\n            <Grid.Column width={3}>\n                <Typography variant=\"h2\">Details</Typography>\n                {\n                    /*\n                <List>\n                    <List.Item header='Boat OGA no:' content={id} />\n                    <List.Item header='Mainsail type:' content={boat.class.mainsailType} />\n                    <List.Item header='Rig type:' content={boat.class.rigType} />\n                    <List.Item header='Home port or other location:' content={boat.home_port} />\n                    <ListItem><div dangerouslySetInnerHTML={{ __html: boat.short_desc }}></div></ListItem>\n                </List>\n                */\n                }\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row width={16}>\n           { /*<Tab panes={panes} />*/}\n        </Grid.Row>\n    </Grid>\n    </MuiThemeProvider>\n    );\n};","export default function RigAndSails() {\n    return \"\";\n}","import React from 'react';\nimport ApolloClient from \"apollo-client\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { useRoutes } from 'hookrouter';\nimport './App.css';\nimport Main from './components/main';\nimport BrowseBoats from './components/browseboats';\nimport Boat from './components/boat';\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    // read-only endpoint\n    uri: \"https://api-oga.herokuapp.com/v1/graphql\",\n    headers: {\n    }\n  }),\n  cache: new InMemoryCache()\n});\n\nconst routes = {\n  \"/\": () => <ApolloProvider client={client}><BrowseBoats /></ApolloProvider>,\n  \"/boats/:id\": ({id}) => <ApolloProvider client={client}><Boat id={id}/></ApolloProvider>,\n  \"/iframe\": () => <Main />\n};\n\nfunction App() {\n  const routeResult = useRoutes(routes)\n  return routeResult\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}